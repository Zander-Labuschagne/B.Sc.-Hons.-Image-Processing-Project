2017/09/03

1. Image Preporation
    Images are reduced in size by 50%
    Images cobverted to grayscale

2. Pre-processing(Pre-filtering)
    2.1 Wiener Low Pass Filter
        - MATLAB's built in wiener2 function
        - Kernel size did not seem to have impact on performance.
        - 
    
    2.2 Median Low Pass Filter
        - MATLAB's built in medfilt2 function
        
    2.3 Low Pass Butterworth Filter
        - p181 in Intro IP book
        
    2.4 Gaussian Low Pass Filter
        - MATLAB-s built in imgaussfilt function
        
    2.5 Wavelett Transform
    
    2.6 Morphological Filters(Thinning)(Closing)
    
3. Binarization
    Default Niblack and Otsu compliment eachother, where one doesn't work the other does.
    
    3.1 Otsu's Binarization Algorithm
        - MATLAB's builtin imbinarize finction \cite()
        - Works well but not on light ink as light ink is not seperated well enough from background.
        - Global or Local ?
        - Handles bleed through good
        - Pre-processing filters has very little effect:
            - This is because there is not much background noise
            - Gaussian Low Pass Filter:
                - No effect noticed
            - Low Pass Butterworth Filter:
                - No effect noticed
            - Median Low Pass Filter:
                - May remove some foreground slightly
                - Rather not use
            - Wiener Low Pass Filter
                - Removes foreground text
                - Don't use
        - Post-processing filters:
            - Wiener Low Pass Filter
                - Rather not post process.
                - Removes foreground text with none other improvements.
                - Gets worse as kernel size increases
            - Median Low Pass Filter
                - Dont use
                - No improvement
                - Liitle to no effect
            - Gaussian Low Pass Filter
                - Don't use
        
    3.2 Niblack's Binarization Algorithm
        - Works well where Otsu's fail.
        - Notibly slower
        - The greater the local window size the more noise generated
        - Too small local window size leaves text with double lines
        - Greater local window size brings bleed through.
        - Handles light ink well if local window size is not too small
        - A local window size of 11 was found to work well.
        - By changing the value to -0.5 instead:
            - Increment of -0.5 (to -0.1) will increase noise
            - Decrement of -0.5 (to -1) will decrease noise but removes text.
            - Handles bleed through really well
            - Excellent results
            - Sometime remove foreground pixels, is the compromise worth it?
            - Do not use pre filter on -0.5, removes foreground text
            - Compare with post Wiener filter
        - Pre-processing filters:
            - Can replace Otsu by implementing pre-processing noise removal filters such as median and Wiener 5x5
            - Low Pass Butterworth Filter:
                - No effect on Niblack's binarization algorithm.
                - 
            - Gaussian Low Pass Filter:
                - Has very little noise removal.
                - Not good enough to implement.
            - Median Low Pass Filter:
                - Some noise removal.
                - Just like Gaussian but better.
                - Could implement.
                - For safety and reliability choose this one.
                - Very good on light ink where all others fail
            - Wiener Low Pass Filter:
                - Very good noise removal.
                - Much better than Median and Gauss.
                - Kernel size 5:
                    - Still leaves lines sometimes.
                    - Removes some bleed through
                    - May use but whatch it!
                    - No! Too risky.
                - Kernel size 7:
                    - Still leaves lines.
                    - Removes nearly all bleed through
                    - Still leaves some noise around where bleed through were
                    - But might remove some text.
                    - Rather don't use.
                - Kernel size 11:
                - Kernel size 9:
                    - Still leaves lines.
                    - But might remove some text.
                    - Rather don't use.
                - Kernel size 11:
                    - As good as kernel size 9
                    - Removes lines.
                    - Still leaves some noise around where lines were.
                - Kernel size 13:
                    - Removes lines.
                    - Best pre-processing found.
                - Kernel size 17:
                    - Might removes some foreground text.
                    - Removes lines.
                    - Creates little noise around foreground text.
                - Kernel sizes above 17 does not yield much improvement but generates much more noise around text and removes more foreground text.
        - Post-processing filters:
            - Wiener Low Pass Filter:
                - Kan dalk die Wiener kernel size op -0.5 kleiner as 11 maak?
                - Kernel size 17 op -0.2 is goed.
                - Very Good
                - The bigger the kernel the less intensive the noise becomes(blur), but also the less binary it becomes
                - Kernel size of 17 was found to be optimal for -0.2 or kernel size of 11 for -0.5
                - Wiener followed by Otsu binarization seems to work extremely well!!
                - Wiener followed by another Niblack binarization adds more noise, so use Otsu instead.
            - Median Low Pass Filter:
                - 
            
    3.3 Sauvola's Binarization Algorithm
        - 
        
    3.4 Gatos & Pratikakis's Binarization Algorithm
        - 
        
    3.5 ISODATA
        - 
        
    3.6 Rosenfeld
        -
        
    3.x Laplacian Binarization Algorithm
        -
        
    4. Conclusion:
        - Pre-Processing:
            - Only filter -0.2
            - Median Pre-processing
            - Wiener5 Pre-processing?? Eish
        - Binarization:
            - Definitely Niblack
            - -0.2
            - -0.5?? Eish handles bleedthrough sooo well
            - Local window size 11 or 17 only if -0.5 
        - Post-Processing:
            - Definitely Wiener?
            - Niblack11 -> Wiener11 -> Otsu -0.5
            - Niblack11 -> Wiener17 -> Otsu beter vertroue maar meer ruis -> gebruik dan hough om lyne uit te haal
        - Vir bleedthrough: kan mens nie die grysvlak waardes verspreiding kyk en bepaal of daar bleedthrough/bloubladsy is nie?
            dan bepaal dit keuse tussen -0.5 en -0.2
            
        - Sover Niblack11 met Wiener17/11 filter en dan Otsu moet net kies tussen -0.2 en -0.5 of Niblack17 met Wiener17 filter en dan Otsu? hy vat bietjie voorgrond weg of net plain median
        - 17 17 0.5; 17 17 0.2; 11 17 0.5; 11 11 0.5?; 11 17 0.2; 11 11 0.2?
            
